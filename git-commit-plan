#!/bin/zsh

# |---------------------------|
# |        Commit-Plan        |
# |---------------------------|

BRANCH=$(git symbolic-ref --short HEAD)

createCommitPlan() {
    echo
    echo "Commit-Plan:"
    echo " - Add your Commit messages."
    echo " - Press <ENTER> to continue."
    echo " - Enter an empty message to Finish."
    echo

    commit_plans=()
    while true; do
        echo -n " => "
        read -r plan < /dev/tty
        if [[ -z "$plan" ]]; then
            # if plan is empty
            break;
        else
            commit_plans+=("$plan")
        fi
    done

    no_spaces=("${(@)commit_plans[@]%%[[:space:]]##}")
    no_spaces=("${no_spaces[@]// /_}")
    commit_data="${(j:%:)no_spaces}"
    git config "branch.$BRANCH.commit-plan" "$commit_data"
    echo "commit-plan created\n"
}

showCommitPlan(){
    commit_data=$(git config --get branch.$BRANCH.commit-plan)
    local commit_plans=("${(s:%:)commit_data}")
    echo
    echo "Commit-Plan:"
    echo
    for plan in "${commit_plans[@]}"; do
        echo " => ${plan//_/ }"
    done
    echo
    echo "commit changes using a message with:"
    echo "'git commit-plan --commit'"
    echo
}


# |----------------------|
# |        main()        |
# |----------------------|

    #   no arguments
    # ----------------

if [[ $# -eq 0 ]]; then
    # if commit-plan already exists
    if git config --get branch.$BRANCH.commit-plan >/dev/null 2>&1; then
    showCommitPlan
    else # does not exist
    createCommitPlan
    fi
    exit 0
fi

    #   arguments
    # -------------

while [[ $# -gt 0 ]]; do
    case "$1" in
        --help|-h)
            echo "Usage: git commit-plan [options]"
            echo "options:"
            echo "  --new  | -n  Create a new commit plan."
            echo "  --help | -h  Show this help message."
            exit 0
            ;;
        --new| -n)
            createCommitPlan
            exit 0
            ;;
        *)
        
            ;;
    esac
    shift
done
